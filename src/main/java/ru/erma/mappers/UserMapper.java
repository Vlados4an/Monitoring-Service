package ru.erma.mappers;

import org.mapstruct.Mapper;
import org.mapstruct.Mapping;
import org.mapstruct.Named;
import org.mapstruct.factory.Mappers;
import ru.erma.dto.SecurityDTO;
import ru.erma.model.User;
import ru.erma.util.PasswordHasher;

@Mapper
public interface UserMapper {

    /**
     * The INSTANCE field is a singleton instance of the UserMapper.
     * It is obtained using the MapStruct factory method getMapper.
     */
    UserMapper INSTANCE = Mappers.getMapper(UserMapper.class);

    /**
     * This method is used to map from a SecurityDTO to a User entity.
     * The implementation of this method is generated by MapStruct.
     *
     * @param securityDTO the SecurityDTO to be mapped to a User entity
     * @return the User entity mapped from the SecurityDTO
     */
    @Mapping(target = "password", source = "password", qualifiedByName = "hashPassword")
    User toUser(SecurityDTO securityDTO);

    /**
     * This method is used to hash a password using the PasswordHasher utility.
     * It is named "hashPassword" so it can be referenced in the @Mapping annotation in the toUser method.
     *
     * @param password the password to be hashed
     * @return the hashed password as a byte array
     */
    @Named("hashPassword")
    default byte[] hashPassword(String password) {
        return PasswordHasher.hashPassword(password);
    }
}
